>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix
[[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix = [
...     [-1, -2, -3],
...     [-4, -5, -6],
...     [-7, -8, -9]
... ]
>>> matrix
[[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]
>>> matrix_divided(matrix, -3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]
>>> matrix = [
... [0.1, 1.2, 2.3, 3.4],
... [4.5, 5.6, 6.7, 7.8]
... ]
>>> matrix
[[0.1, 1.2, 2.3, 3.4], [4.5, 5.6, 6.7, 7.8]]
>>> matrix_divided(matrix, 3.469)
[[0.03, 0.35, 0.66, 0.98], [1.3, 1.61, 1.93, 2.25]]
>>> matrix = [
... [0, 1, 2],
... ["Oh", "Hello", "World"],
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [
... [0, 1, 2],
... [0, 1],
... ]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
